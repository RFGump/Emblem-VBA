' Step 1: Normalize x values
' (2 * xInput - xSpan) / xRange
' Range = max - min
' Span = min + max


'Step 2: Calculate polynomials of order P
' P(0) = 1
' P(1) = 2 (x - a(1))
' P(i) = 2 (x - a(i)) P(i - 1) - b(i - 1) P(i - 2)

`==========================================================================================================



`==========================================================================================================
Option Explicit

Sub main()

'Declare variables
Dim sf As SimpleFactor
Dim v As Variate
Dim i As Long

'Create variate (make sure model has atleast one variate)
Set v = Variates(1)

'Print properties of variate
Debug.Print "Name: " & v.Name
Debug.Print "Basefactor: " & v.BaseFactor
Debug.Print "Orthogonal: " & v.OrthogonalPolynomialFlag

'Print design matrix information
Set sf = Simplefactors(v.BaseFactor)
Debug.Print "Simple Factor Level/Design Matrix Value First Power/Design Matrix Value Second Power"
For i = 1 To sf.NumberOfLevels
    Debug.Print sf.LevelName(i) & " " & v.DesignXValue(1, i) & " " & v.DesignXValue(2, i) & " " & v.DesignXValue(3, i)
Next

'Print orthogonal polynomial information
Dim xRange As Double
Dim xSpan As Double
Dim a() As Double
Dim b() As Double
ReDim a(1 To 10) As Double
ReDim b(1 To 10) As Double

v.OrthogonalPolynomialParameters xRange, xSpan, a(), b()

Debug.Print "Range: " & xRange
Debug.Print "Span: " & xSpan
Debug.Print "a b"
For i = LBound(a) To UBound(a)
    Debug.Print a(i) & " " & b(i)
Next

End Sub
